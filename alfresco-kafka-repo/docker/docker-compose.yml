version: '3.4'
services:
     
  #Optional service to launch share interface
  alfresco-kafka-repo-share:
    image: ${docker.share.image}:${alfresco.share.version}
    environment:
      REPO_HOST: alfresco-kafka-repo-acs
      REPO_PORT: 8080
    ports:
      - "${share.port}:8080"
      
  alfresco-kafka-repo-acs:
    image: alfresco-content-services-alfresco-kafka-repo:development
    build:
      dockerfile: ./Dockerfile
      context: ../../../target
    environment:
      CATALINA_OPTS: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=0.0.0.0:8888"
      JAVA_OPTS: "
                -Dkafka.topic=alfresco-node-events
                -Dkafka.server=kafka:9092
                "
    ports:
      - "${acs.port}:8080"
      - "${acs.debug.port}:8888"
    volumes:
      - alfresco-kafka-repo-acs-volume:/usr/local/tomcat/alf_data
      - ../../../../logs/alfresco:/usr/local/tomcat/logs
    depends_on:
      - kafka
      - alfresco-kafka-repo-postgres
      
  alfresco-kafka-repo-postgres:
    image: postgres:11.7
    environment:
      POSTGRES_DB: alfresco
      POSTGRES_USER: alfresco
      POSTGRES_PASSWORD: alfresco
    command: postgres -c max_connections=300 -c log_min_messages=LOG
    ports:
      - "${postgres.port}:5432"
    volumes:
      - alfresco-kafka-repo-db-volume:/var/lib/postgresql/data
      
  alfresco-kafka-repo-ass:
    image: alfresco/alfresco-search-services:2.0.0.1
    environment:
      #Solr needs to know how to register itself with Alfresco
      - SOLR_ALFRESCO_HOST=alfresco-kafka-repo-acs
      - SOLR_ALFRESCO_PORT=8080
      #Alfresco needs to know how to call solr
      - SOLR_SOLR_HOST=alfresco-kafka-repo-ass
      - SOLR_SOLR_PORT=8983
      #Create the default alfresco and archive cores
      - SOLR_CREATE_ALFRESCO_DEFAULTS=alfresco,archive
      #HTTP by default
      - ALFRESCO_SECURE_COMMS=none
    ports:
      - "8983:8983"
    volumes:
      - alfresco-kafka-repo-ass-volume:/opt/alfresco-search-services/data
   
  zookeeper:
    image: bitnami/zookeeper:3.6.2
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"
    volumes:
      - ../../../../data/alfresco-zk:/bitnami/zookeeper
      - ../../../../data/alfresco-zk-logs:/opt/bitnami/zookeeper/logs
      
  kafka:
    image: bitnami/kafka:2.6.0   
    environment:
       KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9093
       KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
       KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
       KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
       ALLOW_PLAINTEXT_LISTENER: "yes"
       KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
    ports:
      - "9092:9092"
      - "9093:9093"
    volumes:
      - ../../../../data/alfresco-kafka:/bitnami/kafka
      - ../../../../data/alfresco-kafka-logs:/opt/bitnami/kafka/logs
    depends_on:
      - zookeeper

volumes:
  alfresco-kafka-repo-acs-volume:
    external: true
  alfresco-kafka-repo-db-volume:
    external: true
  alfresco-kafka-repo-ass-volume:
    external: true